<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<bean id="dynamicSessionFactory"
		class="com.notehive.osgi.hibernate_samples.session.DynamicSessionFactory"
		depends-on="dynamicConfiguration">
		<property name="configuration" ref="dynamicConfiguration"/>
	</bean>
	
	<bean id="application" class="com.notehive.osgi.hibernate_samples.app.Application">
		<property name="sessionFactory" ref="dynamicSessionFactory"/>
	</bean>
	
	<bean id="dynamicConfigurationListener" class="com.notehive.osgi.hibernate_samples.app.DynamicConfigurationListener">
	</bean>
	
	<!-- Things fall apart when I add a transaction manager into the mix... 
		The transaction manager seems to keep holding on to it's old session factory 
		and never learn about the new A1 class added to the repository -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="dynamicSessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

</beans>
